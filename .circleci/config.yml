jobs:
  build-dev:
    docker:
      - image: "cimg/base:stable"
    steps:
      - checkout
      - node/install:
          install-yarn: true
      - run: node --version
      - run:
          name: install node modules by yarn
          command: yarn install
      - run:
          name: build for production
          command: CONFIG_JSON=$CONFIG_JSON_PROD yarn build

      - persist_to_workspace:
          root: .
          paths:
            - release
  build-prod:
    docker:
      - image: "cimg/base:stable"
    steps:
      - checkout
      - node/install:
          install-yarn: true
      - run: node --version
      - run:
          name: install node modules by yarn
          command: yarn install
      - run:
          name: build for production
          command: CONFIG_JSON=$CONFIG_JSON_PROD yarn build:prod

      - persist_to_workspace:
          root: .
          paths:
            - release
  deploy-to-dev:
    executor: aws-cli/default
    steps:
      - aws-cli/setup
      - attach_workspace:
          at: .
      - run: ls ./release
      - run:
          name: upload to S3
          command: aws s3 cp ./release s3://scopinrock-dev/ --recursive
      - run:
          name: clear cache in CDN
          command: aws cloudfront create-invalidation --distribution-id $CF_DIST_ID_DEV --paths "/*" "/"
  deploy-to-prod:
    executor: aws-cli/default
    steps:
      - aws-cli/setup
      - attach_workspace:
          at: .
      - run: ls ./release
      - run:
          name: upload to S3
          command: aws s3 cp ./release s3://fumipo-theta-microscope/ --recursive
      - run:
          name: clear cache in CDN
          command: aws cloudfront create-invalidation --distribution-id $CF_DIST_ID_PROD --paths "/*" "/"

orbs:
  node: circleci/node@4.1.0
  aws-cli: circleci/aws-cli@1.3.1
version: 2.1
workflows:
  deploy-to-dev:
    jobs:
      - build-dev
      - build-prod
      - deploy-to-dev:
          requires:
            - build-dev
          filters:
            branches:
              only:
                - master
      - deploy-to-prod:
          requires:
            - build-prod
          filters:
            branches:
              only:
                - release
